soluciÃ³n en blanco
ComprobaciÃ³n de la versiÃ³n de SDK y .NET
dotnet --versiÃ³n

CreaciÃ³n de un proyecto en ASP.NET Core con Entity Framework Core.

ubicarse en la carpeta destino
dotnet new webapi -n <<Nombre proyecto>>

Luego, abrir el proyecto desde visual studio

en el NuGet:
cd <<carpeta del proyecto>>
InstalaciÃ³n de estos paquetes: 

dotnet add package Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.Tools
dotnet add package MediatR
dotnet add package FluentValidation
dotnet add package Microsoft.Extensions.Caching.Memory
dotnet add package Microsoft.EntityFrameworkCore.InMemory //base de datos en memoria



InstalaciÃ³n de  la herramienta CLI de Entity Framework Core, para usar el comando dotnet ef
dotnet tool install --global dotnet-ef


Confirma que funciona, devuelve lista de comandos como migrations, database
dotnet ef

Crear las capas de la arquitectura 

ğŸ“‚ PrestamosVehiculos
 â”œâ”€â”€ ğŸ“‚ Core (Capa de Dominio)
 â”‚    â”œâ”€â”€ ğŸ“‚ Entities
 â”‚    â”œâ”€â”€ ğŸ“‚ ValueObjects
 â”‚    â”œâ”€â”€ ğŸ“‚ Aggregates
 â”‚    â”œâ”€â”€ ğŸ“‚ Services
 â”‚    â”œâ”€â”€ ğŸ“‚ Events
 â”‚    â”œâ”€â”€ ğŸ“‚ Interfaces
 â”‚
 â”œâ”€â”€ ğŸ“‚ Infrastructure (Persistencia, ORM)
 â”‚    â”œâ”€â”€ ğŸ“‚ Persistence
 â”‚    â”œâ”€â”€ ğŸ“‚ Repositories
 â”‚    â”œâ”€â”€ ğŸ“‚ Configuration
 â”‚
 â”œâ”€â”€ ğŸ“‚ Application (OrquestaciÃ³n de Casos de Uso)
 â”‚    â”œâ”€â”€ ğŸ“‚ DTOs
 â”‚    â”œâ”€â”€ ğŸ“‚ Commands
 â”‚    â”œâ”€â”€ ğŸ“‚ Queries
 â”‚    â”œâ”€â”€ ğŸ“‚ Handlers
 â”‚
 â”œâ”€â”€ ğŸ“‚ API (Capa de PresentaciÃ³n)

Implementar objetos a la capa core o de dominio

Implementar objetos a la capa de Infraestructura

Implementar objetos a la capa de aplicaciÃ³n

Implementar objetos a la capa de API

Implementar el program.cs con los builder necesarios 

revisar en properties\launchsetting.json que si estÃ© swagger
"launchUrl": "swagger"


compilar


ejecuta la migraciÃ³n

Desde la carpeta raÃ­z del proyecto donde estÃ¡ el archivo .csproj que contiene tu DbContext, ejecuta:
dotnet ef migrations add InitialCreate

Aplica la migraciÃ³n
dotnet ef database update

Compilar, ejecutar y ver errores en el proyecto
dotnet build

EjecuciÃ³n del proyecto
cd C:\Users\000096175\PrestamosVehiculos

dotnet run


